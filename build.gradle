plugins {
    id 'java'
    id 'war'
}

group 'com.asalavei'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
    mapstructVersion = "1.6.0"
    lombokVersion = "1.18.34"
    lombokMapstructBindingVersion = "0.2.0"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly('org.projectlombok:lombok:1.18.34')

    implementation('jakarta.servlet:jakarta.servlet-api:5.0.0')
    implementation('org.springframework:spring-webmvc:6.1.13')
    implementation('org.postgresql:postgresql:42.7.4')
    implementation('org.hibernate.orm:hibernate-core:6.6.1.Final')
    implementation('com.zaxxer:HikariCP:6.0.0')
    implementation('org.slf4j:slf4j-api:2.0.16')
    implementation('ch.qos.logback:logback-classic:1.5.8')
    implementation('org.flywaydb:flyway-core:10.19.0')
    implementation('org.thymeleaf:thymeleaf-spring6:3.1.2.RELEASE')
    implementation('org.mapstruct:mapstruct:1.6.2')
    implementation('org.hibernate.validator:hibernate-validator:8.0.1.Final')
    implementation('org.mindrot:jbcrypt:0.4')
    implementation('org.apache.commons:commons-lang3:3.17.0')
    implementation('jakarta.annotation:jakarta.annotation-api:3.0.0')
    implementation('org.passay:passay:1.6.6')

    runtimeOnly('org.flywaydb:flyway-database-postgresql:10.19.0')

    annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}")

    testImplementation('org.springframework:spring-test:6.1.13')
    testImplementation('org.testcontainers:postgresql:1.20.3')
    testImplementation('org.testcontainers:junit-jupiter:1.20.3')
    testImplementation('org.mockito:mockito-core:5.14.2')
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}